name: Windows workflow

on:
  push: # todo: remove this, and disable push to main branch, now keep it
    branches: [ "main" ]
  pull_request:
    # we use main as like the develop branch for simplicity
    branches: [ "main" ]
  # enable we can run workflow manually
  workflow_dispatch: # no args

jobs:
  build:
    runs-on: windows-latest
    
    # === Matrix 策略：基于您的实际预设名称 ===
    strategy:
      fail-fast: false
      matrix:
        include:
          - build_type: Debug
            configure_preset: windows-msvc-debug
            build_preset: windows-msvc-debug
            test_preset: windows-test
            display_name: "Windows MSVC Debug"
          
          - build_type: Release
            configure_preset: windows-msvc-release
            build_preset: windows-msvc-release
            test_preset: windows-test
            display_name: "Windows MSVC Release"
    
    # 动态生成 job 名称
    name: ${{ matrix.display_name }}
    
    env:
      # 完全按照参考模板的方式
      _VCPKG_: ${{ github.workspace }}/vcpkg
      VCPKG_DEFAULT_BINARY_CACHE: ${{ github.workspace }}/vcpkg/bincache
      VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'

    steps:
    # === 按照参考模板的确切顺序和方式 ===
    
    # 1. 缓存环境变量设置
    - uses: actions/github-script@v7
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    # 2. 检出代码
    - uses: actions/checkout@v4
      with:
        submodules: true

    # 3. 创建缓存目录（完全按照参考模板）
    - name: "Create directory '${{ env.VCPKG_DEFAULT_BINARY_CACHE }}'"
      run: mkdir -p $VCPKG_DEFAULT_BINARY_CACHE
      shell: bash

    # 4. 安装工具
    - uses: lukka/get-cmake@latest

    # 5. vcpkg 缓存（按照参考模板的缓存键）
    - name: Restore vcpkg
      uses: actions/cache@v4
      with:
        path: |
          ${{ env._VCPKG_ }}
          !${{ env._VCPKG_ }}/buildtrees
          !${{ env._VCPKG_ }}/packages
          !${{ env._VCPKG_ }}/downloads
          !${{ env._VCPKG_ }}/installed
        # 使用参考模板的简单缓存键
        key: |
          ${{ hashFiles( '.git/modules/vcpkg/HEAD' )}}

    # 6. MSVC 设置（在缓存之后）
    - uses: ilammy/msvc-dev-cmd@v1

    # 7. 构建流程
    - name: Configure CMake (${{ matrix.build_type }})
      run: cmake --preset ${{ matrix.configure_preset }}

    - name: Build project (${{ matrix.build_type }})
      run: cmake --build --preset ${{ matrix.build_preset }}

    - name: Run tests (${{ matrix.build_type }})
      run: ctest --preset ${{ matrix.test_preset }}
